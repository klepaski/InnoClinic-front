{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { Status } from '../Models/Office/Status';\nimport { CreateOffice } from \"../Models/Office/CreateOffice\";\nimport { UpdateOffice } from \"../Models/Office/UpdateOffice\";\nlet OfficesComponent = class OfficesComponent {\n  _officeService;\n  enum = Status;\n  offices;\n  errorsPresent = false;\n  error;\n  newOffice = new CreateOffice();\n  updateOffice = new UpdateOffice();\n  editableOfficeId;\n  constructor(_officeService) {\n    this._officeService = _officeService;\n  }\n  ngOnInit() {\n    this._officeService.getAll().subscribe(res => {\n      this.offices = res;\n    }, err => console.log(err));\n  }\n  editOffice(id) {\n    this.editableOfficeId = id;\n  }\n  saveOffice(data) {\n    this.updateOffice.id = data.id;\n    this.updateOffice.photoUrl = data.photoUrl;\n    this.updateOffice.city = data.city;\n    this.updateOffice.street = data.street;\n    this.updateOffice.houseNumber = data.houseNumber;\n    this.updateOffice.officeNumber = data.officeNumber;\n    this.updateOffice.registryPhoneNumber = data.registryPhoneNumber;\n    this.updateOffice.status = Number(data.status);\n    this._officeService.update(this.updateOffice).subscribe(res => {\n      // this.ngOnInit();\n      this.editableOfficeId = 0;\n    }, err => {\n      console.log(err);\n      this.errorsPresent = true;\n      this.error = err;\n    });\n  }\n  create() {\n    this.newOffice.status = Number(this.newOffice.status);\n    this._officeService.create(this.newOffice).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      console.log(err);\n      this.errorsPresent = true;\n      this.error = err;\n    });\n  }\n  delete(id) {\n    this._officeService.delete(id).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      console.log(err);\n      this.errorsPresent = true;\n      this.error = err;\n    });\n  }\n};\nOfficesComponent = __decorate([Component({\n  selector: 'app-offices',\n  styleUrls: ['./offices.component.css'],\n  templateUrl: './offices.component.html'\n})], OfficesComponent);\nexport { OfficesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}