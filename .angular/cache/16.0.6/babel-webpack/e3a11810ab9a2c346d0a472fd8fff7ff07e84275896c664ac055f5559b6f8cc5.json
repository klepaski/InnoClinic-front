{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nlet NgImageUploadDirective = /*#__PURE__*/(() => {\n  class NgImageUploadDirective {\n    maxSize = 5242880; // 5MB in bytes\n    imageUploaded = new EventEmitter();\n    constructor() {}\n    handleImageUpload(files) {\n      const file = files.item(0);\n      if (!file) return;\n      // Check file type\n      const allowedTypes = ['image/png', 'image/jpeg', 'image/gif'];\n      if (!allowedTypes.includes(file.type)) {\n        alert('Invalid file type. Only PNG, JPEG and GIF images are allowed.');\n        return;\n      }\n      // Check file size\n      if (file.size > this.maxSize) {\n        alert('File size exceeds limit. Maximum allowed size is 5MB.');\n        return;\n      }\n      // Emit event with file object\n      this.imageUploaded.emit(file);\n    }\n    static ɵfac = function NgImageUploadDirective_Factory(t) {\n      return new (t || NgImageUploadDirective)();\n    };\n    static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: NgImageUploadDirective,\n      selectors: [[\"\", \"ngImageUpload\", \"\"]],\n      hostBindings: function NgImageUploadDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function NgImageUploadDirective_change_HostBindingHandler($event) {\n            return ctx.handleImageUpload($event.target.files);\n          });\n        }\n      },\n      inputs: {\n        maxSize: \"maxSize\"\n      },\n      outputs: {\n        imageUploaded: \"imageUploaded\"\n      }\n    });\n  }\n  return NgImageUploadDirective;\n})();\nexport { NgImageUploadDirective };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}